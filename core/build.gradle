apply plugin: 'kotlin-multiplatform'

kotlin {
    targets {
        if (System.getProperty('idea.active') == 'true') {
            fromPreset(presets.macosX64, 'native')
        } else {
            fromPreset(presets.macosX64, 'macos64')
            fromPreset(presets.linuxX64, 'linux64')
        }

        fromPreset(presets.jvm, "jvm") {
            configure([compilations.main, compilations.test]) {
                tasks.getByName(compileKotlinTaskName).kotlinOptions {
                    jvmTarget = '1.8'
                }
            }
        }
        fromPreset(presets.js, "js") {
            configure([compilations.main, compilations.test]) {
                tasks.getByName(compileKotlinTaskName).kotlinOptions {
                    sourceMap = true
                    moduleKind = "umd"
                    metaInfo = true
                }
            }
        }
    }

    configure(sourceSets) {
        languageSettings {
            progressiveMode = true
            useExperimentalAnnotation("kotlin.Experimental")
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                api "org.jetbrains.kotlin:kotlin-stdlib"
                api "org.jetbrains.kotlinx:kotlinx-io:$kotlinx_io_version"
            }
        }

        commonTest {
            dependencies {
                api 'org.jetbrains.kotlin:kotlin-test-common'
                api 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
        }

        jvmMain {
            dependencies {
                api 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
                api "org.jetbrains.kotlinx:kotlinx-io-jvm:$kotlinx_io_version"

            }
        }
        jvmTest {
            dependencies {
                api 'org.jetbrains.kotlin:kotlin-test-junit'
            }
        }

        jsMain {
            dependencies {
                api 'org.jetbrains.kotlin:kotlin-stdlib-js'
                api "org.jetbrains.kotlinx:kotlinx-io-js:$kotlinx_io_version"
            }
        }

        jsTest {
            dependencies {
                api 'org.jetbrains.kotlin:kotlin-test-js'
            }
        }

        nativeMain.dependencies {
            api "org.jetbrains.kotlinx:kotlinx-io-native:$kotlinx_io_version"
        }

        if (System.getProperty('idea.active') != 'true') {
            nativeMain {}

            nativeTest {}

            configure([linux64Main, macos64Main]) {
                dependsOn nativeMain
            }

            configure([linux64Test, macos64Test]) {
                dependsOn nativeTest
            }
        }
    }
}

apply from: rootProject.file("gradle/publish.gradle")
apply from: rootProject.file('gradle/node-js.gradle')
apply from: rootProject.file('gradle/test-mocha-js.gradle')
